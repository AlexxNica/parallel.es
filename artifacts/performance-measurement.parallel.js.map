{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///performance-measurement.parallel.js","webpack:///./example/performance-measurement.ts","webpack:///./example/knights-tour.ts","webpack:///./example/mandelbrot.ts","webpack:///./example/monte-carlo.ts"],"names":["root","factory","exports","module","define","amd","this","webpackJsonpparallel_es","172","__webpack_require__","createParallelMandelbrotMeasurements","mandelbrotOptions","result","_len","arguments","length","maxValuesPerTasks","Array","_key","_arr","undefined","concat","_loop","maxValuesPerTask","_i","push","title","imageWidth","imageHeight","iterations","func","start","performance","now","i","__WEBPACK_IMPORTED_MODULE_5__mandelbrot__","then","end","createMonteCarloMeasurements","options","createProjects","count","projects","startYear","Math","round","random","totalAmount","measurements","_len2","numberOfProjects","_key2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop2","projectCount","value","runOptions","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_assign___default","__WEBPACK_IMPORTED_MODULE_6__monte_carlo__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_promise___default","a","resolve","_iterator","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator___default","next","done","err","createKnightBoardMeasurements","_len3","boardSizes","_key3","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop3","boardSize","__WEBPACK_IMPORTED_MODULE_7__knights_tour__","x","y","_iterator2","createExamples","mandelbrotHeight","parseInt","document","querySelector","mandelbrotWidth","mandelbrotIterations","monteCarloOptions","investmentAmount","numRuns","numYears","seed","volatility","nightRunner","knightRunner6x6","checked","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default","apply","measure","clearOutputTable","outputTable","rows","deleteRow","createTableHeader","thead","createTHead","headerRow","insertRow","createElement","innerText","appendChild","run","numberOfRuns","runTitle","averageTitle","numberOfRunsField","chain","res","results","body","createTBody","examples","_loop4","example","row","insertCell","textContent","total","time","toFixed","average","jsonOutputField","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","n","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_promise__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_assign__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator__","runButton","addEventListener","event","preventDefault","25","createEnvironment","board","fill","knightTours","startPath","environment","moves","numberOfFields","stack","map","pos","index","coordinate","fieldIndex","_stack","_fieldIndex","move","successor","accessible","pop","syncKnightTours","parallelKnightTours","successors","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default","computeStartFields","directSuccessor","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","indirectSuccessor","startTime","__WEBPACK_IMPORTED_MODULE_1__src_browser_index__","from","inEnvironment","reduce","memo","subscribe","subResults","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","tours","console","log","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__","26","createMandelOptions","min","real","max","scalingFactor","computeMandelbrotLine","calculateZ","c","z","pow","zI","line","Uint8ClampedArray","cI","_calculateZ","base","parallelMandelbrot","__WEBPACK_IMPORTED_MODULE_0__src_browser_index__","range","syncMandelbrot","callback","27","initializeOptions","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default","liquidity","createMonteCarloEnvironment","simulateOutcomes","cashFlows","toAbsoluteIndices","indices","currentPortfolioValue","previousYearIndex","relativeYear","currentYearIndex","cashFlowStartOfYear","year","randomPerformance","_year","projectsToCashFlows","projectsByThisYear","projectsByStartYear","cashFlow","project","calculateNoInterestReferenceLine","noInterestReferenceLine","investmentAmountLeft","projectsToSimulate","taskIndex","valuesPerWorker","slice","sort","b","arr","simulatedValues","calculateProject","groupForValue","groups","find","group","to","createGroups","requiredAmount","noInterestReference","description","name","percentage","separator","calculateRequiredAmount","amount","projectsSameYear","otherProject","median","values","half","floor","NUMBER_OF_BUCKETS","simulatedValuesThisYear","valuesByGroup","bucketSize","buckets","bucket","Number","MIN_VALUE","MAX_VALUE","subBuckets","j","subBucket","nonEmptyGroups","filter","forEach","oneSixth","twoThird","syncMonteCarlo","parallelMonteCarlo","userOptions","__WEBPACK_IMPORTED_MODULE_2__src_browser_index__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__"],"mappings":"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","file":"performance-measurement.parallel.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"parallel-es\"] = factory();\n\telse\n\t\troot[\"parallel-es\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"parallel-es\"] = factory();\n\telse\n\t\troot[\"parallel-es\"] = factory();\n})(this, function() {\nreturn webpackJsonpparallel_es([0],{\n\n/***/ 172:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(58);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_promise__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_assign__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__mandelbrot__ = __webpack_require__(26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__monte_carlo__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__knights_tour__ = __webpack_require__(25);\n\n\n\n\n\n\n\n\nvar runButton = document.querySelector(\"#run\");\nvar outputTable = document.querySelector(\"#output-table\");\nvar numberOfRunsField = document.querySelector(\"#number-of-runs\");\nvar jsonOutputField = document.querySelector(\"#json-output\");\nvar knightRunner6x6 = document.querySelector(\"#knight-runner-6-6\");\nfunction createParallelMandelbrotMeasurements(mandelbrotOptions) {\n    var result = [];\n\n    for (var _len = arguments.length, maxValuesPerTasks = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        maxValuesPerTasks[_key - 1] = arguments[_key];\n    }\n\n    var _arr = [undefined].concat(maxValuesPerTasks);\n\n    var _loop = function _loop() {\n        var maxValuesPerTask = _arr[_i];\n        result.push({\n            title: \"Mandelbrot \" + mandelbrotOptions.imageWidth + \"x\" + mandelbrotOptions.imageHeight + \", \" + mandelbrotOptions.iterations + \" parallel (\" + maxValuesPerTask + \")\",\n            func: function func() {\n                var start = performance.now();\n                return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__mandelbrot__[\"b\" /* parallelMandelbrot */])(mandelbrotOptions, { maxValuesPerTask: maxValuesPerTask }).then(function () {\n                    var end = performance.now();\n                    return end - start;\n                });\n            }\n        });\n    };\n\n    for (var _i = 0; _i < _arr.length; _i++) {\n        _loop();\n    }\n    return result;\n}\nfunction createMonteCarloMeasurements(options) {\n    function createProjects(count) {\n        var projects = [];\n        for (var i = 0; i < count; ++i) {\n            projects.push({\n                startYear: Math.round(Math.random() * 15),\n                totalAmount: Math.round(Math.random() * 100000)\n            });\n        }\n        return projects;\n    }\n    var measurements = [];\n\n    for (var _len2 = arguments.length, numberOfProjects = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        numberOfProjects[_key2 - 1] = arguments[_key2];\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        var _loop2 = function _loop2() {\n            var projectCount = _step.value;\n\n            measurements.push({\n                title: \"Montecarlo \" + projectCount + \" sync\",\n                func: function func() {\n                    var runOptions = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_assign___default()(options, {\n                        projects: createProjects(projectCount)\n                    });\n                    var start = performance.now();\n                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__monte_carlo__[\"a\" /* syncMonteCarlo */])(runOptions);\n                    return __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_promise___default.a.resolve(performance.now() - start);\n                }\n            }, {\n                title: \"Monte carlo \" + projectCount + \" parallel\",\n                func: function func() {\n                    var runOptions = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_object_assign___default()(options, {\n                        projects: createProjects(projectCount)\n                    });\n                    var start = performance.now();\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__monte_carlo__[\"b\" /* parallelMonteCarlo */])(runOptions).then(function () {\n                        return performance.now() - start;\n                    });\n                }\n            });\n        };\n\n        for (var _iterator = __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator___default()(numberOfProjects), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            _loop2();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return measurements;\n}\nfunction createKnightBoardMeasurements() {\n    var measurements = [];\n\n    for (var _len3 = arguments.length, boardSizes = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        boardSizes[_key3] = arguments[_key3];\n    }\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        var _loop3 = function _loop3() {\n            var boardSize = _step2.value;\n\n            measurements.push({\n                title: \"Knights Tour (\" + boardSize + \"x\" + boardSize + \") sync\",\n                func: function func() {\n                    var start = performance.now();\n                    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__knights_tour__[\"a\" /* syncKnightTours */])({ x: 0, y: 0 }, boardSize);\n                    return __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_promise___default.a.resolve(performance.now() - start);\n                }\n            });\n            measurements.push({\n                title: \"Knights Tour (\" + boardSize + \"x\" + boardSize + \") parallel\",\n                func: function func() {\n                    var start = performance.now();\n                    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__knights_tour__[\"b\" /* parallelKnightTours */])({ x: 0, y: 0 }, boardSize).then(function () {\n                        return performance.now() - start;\n                    });\n                }\n            });\n        };\n\n        for (var _iterator2 = __WEBPACK_IMPORTED_MODULE_4_babel_runtime_core_js_get_iterator___default()(boardSizes), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            _loop3();\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    return measurements;\n}\nfunction createExamples() {\n    var mandelbrotHeight = parseInt(document.querySelector(\"#mandelbrot-height\").value, 10);\n    var mandelbrotWidth = parseInt(document.querySelector(\"#mandelbrot-width\").value, 10);\n    var mandelbrotIterations = parseInt(document.querySelector(\"#mandelbrot-iterations\").value, 10);\n    var mandelbrotOptions = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__mandelbrot__[\"a\" /* createMandelOptions */])(mandelbrotWidth, mandelbrotHeight, mandelbrotIterations);\n    var monteCarloOptions = {\n        investmentAmount: 620000,\n        numRuns: 10000,\n        numYears: 15,\n        performance: 0.0340000,\n        seed: 10,\n        volatility: 0.0896000\n    };\n    var result = [{\n        title: \"Mandelbrot \" + mandelbrotWidth + \"x\" + mandelbrotHeight + \", \" + mandelbrotIterations + \" sync\",\n        func: function func() {\n            var start = performance.now();\n            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__mandelbrot__[\"c\" /* syncMandelbrot */])(mandelbrotOptions, function () {\n                return undefined;\n            });\n            var end = performance.now();\n            return __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_promise___default.a.resolve(end - start);\n        }\n    }];\n    var nightRunner = knightRunner6x6.checked ? [5, 6] : [5];\n    return [].concat(result, __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(createParallelMandelbrotMeasurements(mandelbrotOptions, 1, 75, 150, 300, 600, 1200)), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(createMonteCarloMeasurements(monteCarloOptions, 1, 2, 4, 6, 8, 10, 15)), __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(createKnightBoardMeasurements.apply(undefined, nightRunner)));\n}\nfunction measure() {\n    var numberOfRuns = parseInt(numberOfRunsField.value, 10) || 10;\n    function clearOutputTable() {\n        while (outputTable.rows.length > 0) {\n            outputTable.deleteRow(0);\n        }\n    }\n    function createTableHeader() {\n        var thead = outputTable.createTHead();\n        var headerRow = thead.insertRow();\n        var title = document.createElement(\"th\");\n        title.innerText = \"Example / Round\";\n        headerRow.appendChild(title);\n        for (var run = 0; run < numberOfRuns; ++run) {\n            var runTitle = document.createElement(\"th\");\n            runTitle.innerText = run + 1 + \"\";\n            headerRow.appendChild(runTitle);\n        }\n        var averageTitle = document.createElement(\"th\");\n        averageTitle.innerText = \"average\";\n        headerRow.appendChild(averageTitle);\n    }\n    var resolve = undefined;\n    var chain = new __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_promise___default.a(function (res) {\n        resolve = res;\n    });\n    var results = {};\n    clearOutputTable();\n    createTableHeader();\n    var body = outputTable.createTBody();\n    var examples = createExamples();\n\n    var _loop4 = function _loop4(i) {\n        var example = examples[i];\n        results[example.title] = [];\n        var row = body.insertRow();\n        row.insertCell().textContent = example.title;\n        var total = 0;\n        for (var run = 0; run < numberOfRuns; ++run) {\n            chain = chain.then(function () {\n                return example.func();\n            }).then(function (time) {\n                row.insertCell().textContent = time.toFixed(4);\n                total += time;\n                results[example.title].push(time);\n                return time;\n            });\n        }\n        chain = chain.then(function () {\n            var average = total / numberOfRuns;\n            row.insertCell().textContent = average.toFixed(4);\n            return average;\n        });\n    };\n\n    for (var i = 0; i < examples.length; ++i) {\n        _loop4(i);\n    }\n    chain.then(function () {\n        jsonOutputField.innerText = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(results, undefined, \"  \");\n    });\n    // race!\n    resolve();\n}\nrunButton.addEventListener(\"click\", function (event) {\n    event.preventDefault();\n    measure();\n});\n\n/***/ },\n\n/***/ 25:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__src_browser_index__ = __webpack_require__(6);\n/* unused harmony export knightTours */\n/* harmony export (immutable) */ exports[\"a\"] = syncKnightTours;\n/* harmony export (immutable) */ exports[\"b\"] = parallelKnightTours;\n\n\nfunction createEnvironment(boardSize) {\n    var board = new Array(boardSize * boardSize);\n    board.fill(0);\n    return {\n        board: board,\n        boardSize: boardSize\n    };\n}\nfunction knightTours(startPath, environment) {\n    var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n    var boardSize = environment.boardSize;\n    var board = environment.board;\n    var numberOfFields = boardSize * boardSize;\n    var results = 0;\n    var stack = startPath.map(function (pos, index) {\n        return { coordinate: pos, n: index + 1 };\n    });\n    for (var index = 0; index < startPath.length - 1; ++index) {\n        var fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n    while (stack.length > 0) {\n        var _stack = stack[stack.length - 1];\n        var coordinate = _stack.coordinate;\n        var n = _stack.n;\n\n        var _fieldIndex = coordinate.x * boardSize + coordinate.y;\n        if (board[_fieldIndex] !== 0) {\n            // back tracking\n            board[_fieldIndex] = 0;\n            stack.pop(); // remove current value\n            continue;\n        }\n        // entry\n        if (n === numberOfFields) {\n            ++results;\n            stack.pop();\n            continue;\n        }\n        board[_fieldIndex] = n;\n        for (var i = 0; i < moves.length; ++i) {\n            var move = moves[i];\n            var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            // not outside of board and not yet accessed\n            var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n            if (accessible) {\n                stack.push({ coordinate: successor, n: n + 1 });\n            }\n        }\n    }\n    return results;\n}\nfunction syncKnightTours(start, boardSize) {\n    var environment = createEnvironment(boardSize);\n    return knightTours([start], environment);\n}\nfunction parallelKnightTours(start, boardSize, options) {\n    function successors(coordinate) {\n        var moves = [{ x: -2, y: -1 }, { x: -2, y: 1 }, { x: -1, y: -2 }, { x: -1, y: 2 }, { x: 1, y: -2 }, { x: 1, y: 2 }, { x: 2, y: -1 }, { x: 2, y: 1 }];\n        var result = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(moves), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var move = _step.value;\n\n                var successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n                var accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize && (successor.x !== start.x || successor.y !== start.y) && successor.x !== coordinate.x && successor.y !== coordinate.y;\n                if (accessible) {\n                    result.push(successor);\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        return result;\n    }\n    function computeStartFields() {\n        var result = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(successors(start)), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var directSuccessor = _step2.value;\n                var _iteratorNormalCompletion3 = true;\n                var _didIteratorError3 = false;\n                var _iteratorError3 = undefined;\n\n                try {\n                    for (var _iterator3 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(successors(directSuccessor)), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                        var indirectSuccessor = _step3.value;\n\n                        result.push([start, directSuccessor, indirectSuccessor]);\n                    }\n                } catch (err) {\n                    _didIteratorError3 = true;\n                    _iteratorError3 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                            _iterator3.return();\n                        }\n                    } finally {\n                        if (_didIteratorError3) {\n                            throw _iteratorError3;\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        return result;\n    }\n    var total = 0;\n    var startTime = performance.now();\n    return __WEBPACK_IMPORTED_MODULE_1__src_browser_index__[\"default\"].from(computeStartFields(), options).inEnvironment(createEnvironment, boardSize).map(knightTours).reduce(0, function (memo, count) {\n        return memo + count;\n    }).subscribe(function (subResults) {\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(subResults), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var tours = _step4.value;\n\n                total += tours;\n            }\n            /* tslint:disable:no-console */\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n\n        console.log(total / (performance.now() - startTime) * 1000 + \" results per second\");\n    });\n}\n\n/***/ },\n\n/***/ 26:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__src_browser_index__ = __webpack_require__(6);\n/* harmony export (immutable) */ exports[\"a\"] = createMandelOptions;\n/* unused harmony export computeMandelbrotLine */\n/* harmony export (immutable) */ exports[\"b\"] = parallelMandelbrot;\n/* harmony export (immutable) */ exports[\"c\"] = syncMandelbrot;\n\nfunction createMandelOptions(imageWidth, imageHeight, iterations) {\n    // X axis shows real numbers, y axis imaginary\n    var min = { i: -1.2, real: -2.0 };\n    var max = { i: 0, real: 1.0 };\n    max.i = min.i + (max.real - min.real) * imageHeight / imageWidth;\n    var scalingFactor = {\n        i: (max.i - min.i) / (imageHeight - 1),\n        real: (max.real - min.real) / (imageWidth - 1)\n    };\n    return {\n        imageHeight: imageHeight,\n        imageWidth: imageWidth,\n        iterations: iterations,\n        max: max,\n        min: min,\n        scalingFactor: scalingFactor\n    };\n}\nfunction computeMandelbrotLine(y, options) {\n    function calculateZ(c) {\n        var z = { i: c.i, real: c.real };\n        var n = 0;\n        for (; n < options.iterations; ++n) {\n            if (Math.pow(z.real, 2) + Math.pow(z.i, 2) > 4) {\n                break;\n            }\n            // z ** 2 + c\n            var zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = Math.pow(z.real, 2) - Math.pow(zI, 2) + c.real;\n        }\n        return { z: z, n: n };\n    }\n    var line = new Uint8ClampedArray(options.imageWidth * 4);\n    var cI = options.max.i - y * options.scalingFactor.i;\n    for (var x = 0; x < options.imageWidth; ++x) {\n        var c = {\n            i: cI,\n            real: options.min.real + x * options.scalingFactor.real\n        };\n\n        var _calculateZ = calculateZ(c);\n\n        var n = _calculateZ.n;\n\n        var base = x * 4;\n        /* tslint:disable:no-bitwise */\n        line[base] = n & 0xFF;\n        line[base + 1] = n & 0xFF00;\n        line[base + 2] = n & 0xFF0000;\n        line[base + 3] = 255;\n    }\n    return line;\n}\nfunction parallelMandelbrot(mandelbrotOptions, options) {\n    return __WEBPACK_IMPORTED_MODULE_0__src_browser_index__[\"default\"].range(0, mandelbrotOptions.imageHeight, 1, options).inEnvironment(mandelbrotOptions).map(computeMandelbrotLine);\n}\nfunction syncMandelbrot(mandelbrotOptions, callback) {\n    for (var y = 0; y < mandelbrotOptions.imageHeight; ++y) {\n        var line = computeMandelbrotLine(y, mandelbrotOptions);\n        callback(line, y);\n    }\n}\n\n/***/ },\n\n/***/ 27:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__src_browser_index__ = __webpack_require__(6);\n/* harmony export (immutable) */ exports[\"a\"] = syncMonteCarlo;\n/* harmony export (immutable) */ exports[\"b\"] = parallelMonteCarlo;\n\n\n\nfunction initializeOptions(options) {\n    return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default()({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\nfunction createMonteCarloEnvironment(options) {\n    /**\n     * Performs the monte carlo simulation for all years and num runs.\n     * @param cashFlows the cash flows\n     * @returns {number[][]} the simulated outcomes grouped by year\n     */\n    function simulateOutcomes(cashFlows, numYears) {\n        function toAbsoluteIndices(indices) {\n            var currentPortfolioValue = options.investmentAmount;\n            var previousYearIndex = 100;\n            for (var relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                var currentYearIndex = indices[relativeYear];\n                var cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n                // scale current value with performance gain according to index\n                var performance = currentYearIndex / previousYearIndex;\n                currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n                indices[relativeYear] = Math.round(currentPortfolioValue);\n                previousYearIndex = currentYearIndex;\n            }\n            return indices;\n        }\n        var result = new Array(options.numYears);\n        for (var year = 0; year <= numYears; ++year) {\n            result[year] = new Array(options.numRuns);\n        }\n        for (var run = 0; run < options.numRuns; run++) {\n            var indices = [100];\n            for (var i = 1; i <= numYears; i++) {\n                // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                var randomPerformance = 1 + Math.random();\n                indices.push(indices[i - 1] * randomPerformance);\n            }\n            // convert the relative values from above to absolute values.\n            toAbsoluteIndices(indices);\n            for (var _year = 0; _year < indices.length; ++_year) {\n                result[_year][run] = indices[_year];\n            }\n        }\n        return result;\n    }\n    function projectsToCashFlows() {\n        var cashFlows = [];\n        for (var year = 0; year < options.numYears; ++year) {\n            var projectsByThisYear = projectsByStartYear[year] || [];\n            var cashFlow = -projectsByThisYear.reduce(function (memo, project) {\n                return memo + project.totalAmount;\n            }, 0);\n            cashFlows.push(cashFlow);\n        }\n        return cashFlows;\n    }\n    function calculateNoInterestReferenceLine(cashFlows) {\n        var noInterestReferenceLine = [];\n        var investmentAmountLeft = options.investmentAmount;\n        for (var year = 0; year < options.numYears; ++year) {\n            investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n            noInterestReferenceLine.push(investmentAmountLeft);\n        }\n        return noInterestReferenceLine;\n    }\n    var projectsToSimulate = options.projects;\n    if (options.taskIndex && options.valuesPerWorker) {\n        projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n    }\n    var projects = options.projects.sort(function (a, b) {\n        return a.startYear - b.startYear;\n    });\n    // Group projects by startYear, use lodash groupBy instead\n    var projectsByStartYear = {};\n    for (var i = 0; i < projects.length; ++i) {\n        var project = projects[i];\n        var arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n        arr.push(project);\n    }\n    var cashFlows = projectsToCashFlows();\n    var noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n    var numYears = projectsToSimulate.reduce(function (memo, project) {\n        return Math.max(memo, project.startYear);\n    }, 0);\n    return {\n        investmentAmount: options.investmentAmount,\n        liquidity: options.liquidity,\n        noInterestReferenceLine: noInterestReferenceLine,\n        numRuns: options.numRuns,\n        numYears: numYears,\n        projectsByStartYear: projectsByStartYear,\n        simulatedValues: simulateOutcomes(cashFlows, numYears)\n    };\n}\nfunction calculateProject(project, environment) {\n    var NUMBER_OF_BUCKETS = 10;\n    function groupForValue(value, groups) {\n        return groups.find(function (group) {\n            return (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value);\n        });\n    }\n    function createGroups(requiredAmount, noInterestReference) {\n        return [{ description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true }, { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount }, { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity }, { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }];\n    }\n    function calculateRequiredAmount() {\n        var amount = project.totalAmount;\n        var projectsSameYear = environment.projectsByStartYear[project.startYear];\n        for (var i = 0; i < projectsSameYear.length; ++i) {\n            var otherProject = projectsSameYear[i];\n            if (otherProject === project) {\n                break;\n            }\n            amount += otherProject.totalAmount;\n        }\n        return amount;\n    }\n    function median(values) {\n        var half = Math.floor(values.length / 2);\n        if (values.length % 2) {\n            return values[half];\n        }\n        return (values[half - 1] + values[half]) / 2.0;\n    }\n    var requiredAmount = calculateRequiredAmount();\n    var simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort(function (a, b) {\n        return a - b;\n    });\n    var groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n    var valuesByGroup = {};\n    var bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    var buckets = [];\n    for (var i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        var bucket = {\n            max: Number.MIN_VALUE,\n            min: Number.MAX_VALUE,\n            subBuckets: {}\n        };\n        for (var j = i; j < i + bucketSize; ++j) {\n            var value = simulatedValuesThisYear[j];\n            bucket.min = Math.min(bucket.min, value);\n            bucket.max = Math.max(bucket.max, value);\n            var group = groupForValue(simulatedValuesThisYear[j], groups);\n            valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n            var subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n            subBucket.min = Math.min(subBucket.min, value);\n            subBucket.max = Math.max(subBucket.max, value);\n        }\n        buckets.push(bucket);\n    }\n    var nonEmptyGroups = groups.filter(function (group) {\n        return !!valuesByGroup[group.name];\n    });\n    nonEmptyGroups.forEach(function (group) {\n        return group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length;\n    });\n    var oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    return {\n        buckets: buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project: project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    };\n}\nfunction syncMonteCarlo(options) {\n    var environment = createMonteCarloEnvironment(initializeOptions(options));\n    var projects = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(options.projects), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var project = _step.value;\n\n            projects.push(calculateProject(project, environment));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return projects;\n}\nfunction parallelMonteCarlo(userOptions) {\n    var options = initializeOptions(userOptions);\n    return __WEBPACK_IMPORTED_MODULE_2__src_browser_index__[\"default\"].from(options.projects).inEnvironment(createMonteCarloEnvironment, options).map(calculateProject);\n}\n\n/***/ }\n\n},[172])\n});\n;\n\n\n// WEBPACK FOOTER //\n// performance-measurement.parallel.js","import { createMandelOptions, IMandelbrotOptions, parallelMandelbrot, syncMandelbrot } from \"./mandelbrot\";\nimport { IMonteCarloSimulationOptions, syncMonteCarlo, parallelMonteCarlo, IProject } from \"./monte-carlo\";\nimport {syncKnightTours, parallelKnightTours} from \"./knights-tour\";\nconst runButton = document.querySelector(\"#run\") as HTMLInputElement;\nconst outputTable = document.querySelector(\"#output-table\") as HTMLTableElement;\nconst numberOfRunsField = document.querySelector(\"#number-of-runs\") as HTMLInputElement;\nconst jsonOutputField = document.querySelector(\"#json-output\") as HTMLElement;\nconst knightRunner6x6 = document.querySelector(\"#knight-runner-6-6\") as HTMLInputElement;\n\ninterface IPerformanceMeasurement {\n    title: string;\n    func: () => PromiseLike<number>;\n}\n\nfunction createParallelMandelbrotMeasurements(mandelbrotOptions: IMandelbrotOptions, ...maxValuesPerTasks: number[]) {\n    const result: IPerformanceMeasurement[] = [];\n    for (const maxValuesPerTask of [undefined, ...maxValuesPerTasks]) {\n        result.push({\n            title: `Mandelbrot ${mandelbrotOptions.imageWidth}x${mandelbrotOptions.imageHeight}, ${mandelbrotOptions.iterations} parallel (${maxValuesPerTask})`,\n            func() {\n                const start = performance.now();\n                return parallelMandelbrot(mandelbrotOptions, { maxValuesPerTask }).then(() => {\n                        const end = performance.now();\n                        return end - start;\n                    });\n            }\n        });\n    }\n\n    return result;\n}\n\nfunction createMonteCarloMeasurements(options: IMonteCarloSimulationOptions, ...numberOfProjects: number[]) {\n    function createProjects(count: number): IProject[] {\n        const projects: IProject[] = [];\n\n        for (let i = 0; i < count; ++i) {\n            projects.push({\n                startYear: Math.round(Math.random() * 15),\n                totalAmount: Math.round(Math.random() * 100000)\n            });\n        }\n\n        return projects;\n    }\n\n    const measurements: IPerformanceMeasurement[] = [];\n\n    for (const projectCount of numberOfProjects) {\n        measurements.push({\n            title: `Montecarlo ${projectCount} sync`,\n            func() {\n                const runOptions = Object.assign(options, {\n                    projects: createProjects(projectCount)\n                });\n\n                const start = performance.now();\n                syncMonteCarlo(runOptions);\n                return Promise.resolve(performance.now() - start);\n            }\n        }, {\n            title: `Monte carlo ${projectCount} parallel`,\n            func() {\n                const runOptions = Object.assign(options, {\n                    projects: createProjects(projectCount)\n                });\n\n                const start = performance.now();\n                return parallelMonteCarlo(runOptions).then(() => performance.now() - start);\n            }\n        }\n        );\n    }\n\n    return measurements;\n}\n\nfunction createKnightBoardMeasurements(...boardSizes: number[]) {\n    const measurements: IPerformanceMeasurement[] = [];\n    for (const boardSize of boardSizes) {\n        measurements.push({\n            title: `Knights Tour (${boardSize}x${boardSize}) sync`,\n            func() {\n                const start = performance.now();\n                syncKnightTours({x: 0, y: 0}, boardSize);\n                return Promise.resolve(performance.now() - start);\n            }\n        });\n\n        measurements.push({\n            title: `Knights Tour (${boardSize}x${boardSize}) parallel`,\n            func() {\n                const start = performance.now();\n                return parallelKnightTours({x: 0, y: 0}, boardSize)\n                    .then(() => performance.now() - start);\n            }\n        });\n    }\n\n    return measurements;\n}\n\nfunction createExamples(): IPerformanceMeasurement[] {\n    const mandelbrotHeight = parseInt((document.querySelector(\"#mandelbrot-height\") as HTMLInputElement).value, 10);\n    const mandelbrotWidth = parseInt((document.querySelector(\"#mandelbrot-width\") as HTMLInputElement).value, 10);\n    const mandelbrotIterations = parseInt((document.querySelector(\"#mandelbrot-iterations\") as HTMLInputElement).value, 10);\n\n    const mandelbrotOptions = createMandelOptions(mandelbrotWidth, mandelbrotHeight, mandelbrotIterations);\n\n    const monteCarloOptions = {\n        investmentAmount: 620000,\n        numRuns: 10000,\n        numYears: 15,\n        performance: 0.0340000,\n        seed: 10,\n        volatility: 0.0896000\n    };\n\n    const result = [\n        {\n            title: `Mandelbrot ${mandelbrotWidth}x${mandelbrotHeight}, ${mandelbrotIterations} sync`,\n            func(): PromiseLike<number> {\n                const start = performance.now();\n\n                syncMandelbrot(mandelbrotOptions, () => undefined);\n\n                const end = performance.now();\n                return Promise.resolve(end - start);\n            }\n        }\n    ];\n\n    const nightRunner = knightRunner6x6.checked ? [5, 6] : [5];\n\n    return [\n        ...result,\n        ...createParallelMandelbrotMeasurements(mandelbrotOptions, 1, 75, 150, 300, 600, 1200),\n        ...createMonteCarloMeasurements(monteCarloOptions, 1, 2, 4, 6, 8, 10, 15),\n        ...createKnightBoardMeasurements(...nightRunner)\n    ];\n}\n\nfunction measure() {\n    const numberOfRuns = parseInt(numberOfRunsField.value, 10) || 10;\n\n    function clearOutputTable() {\n        while (outputTable.rows.length > 0) {\n            outputTable.deleteRow(0);\n        }\n    }\n\n    function createTableHeader () {\n        const thead = outputTable.createTHead();\n        const headerRow = thead.insertRow();\n\n        const title = document.createElement(\"th\");\n        title.innerText = \"Example / Round\";\n        headerRow.appendChild(title);\n\n        for (let run = 0; run < numberOfRuns; ++run) {\n            const runTitle = document.createElement(\"th\");\n            runTitle.innerText = run + 1 + \"\";\n            headerRow.appendChild(runTitle);\n        }\n\n        const averageTitle = document.createElement(\"th\");\n        averageTitle.innerText = \"average\";\n        headerRow.appendChild(averageTitle);\n    }\n\n    let resolve: { (): void } | undefined = undefined;\n    let chain: PromiseLike<number> = new Promise((res) => {\n        resolve = res;\n    } );\n\n    const results: any = {};\n\n    clearOutputTable();\n    createTableHeader();\n\n    const body = outputTable.createTBody();\n    const examples = createExamples();\n    for (let i = 0; i < examples.length; ++i) {\n        const example = examples[i];\n        results[example.title] = [];\n        const row = body.insertRow();\n        row.insertCell().textContent = example.title;\n\n        let total = 0;\n\n        for (let run = 0; run < numberOfRuns; ++run) {\n            chain = chain.then(() => {\n                return example.func();\n            }).then(time => {\n                row.insertCell().textContent = time.toFixed(4);\n                total += time;\n                results[example.title].push(time);\n                return time;\n            });\n        }\n\n        chain = chain.then(() => {\n            const average = total / numberOfRuns;\n            row.insertCell().textContent = average.toFixed(4);\n            return average;\n        });\n    }\n\n    chain.then(() => {\n        jsonOutputField.innerText = JSON.stringify(results, undefined, \"  \");\n    });\n\n    // race!\n    resolve!();\n}\n\nrunButton.addEventListener(\"click\", function (event: MouseEvent) {\n    event.preventDefault();\n    measure();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./example/performance-measurement.ts","import parallel from \"../src/browser/index\";\nimport {IParallelOptions} from \"../src/common/parallel/parallel-options\";\n\nexport interface ICoordinate {\n    readonly x: number;\n    readonly y: number;\n}\n\nexport interface IKnightTourEnvironment {\n    boardSize: number;\n    board: number[];\n}\n\nfunction createEnvironment(boardSize: number): IKnightTourEnvironment {\n    const board: number[] = new Array(boardSize * boardSize);\n    board.fill(0);\n    return {\n        board,\n        boardSize\n    };\n}\n\nexport function knightTours(startPath: ICoordinate[], environment: IKnightTourEnvironment): number {\n    const moves = [\n        { x: -2, y: -1 }, { x: -2, y: 1}, { x: -1, y: -2 }, { x: -1, y: 2 },\n        { x: 1, y: -2 }, { x: 1, y: 2}, { x: 2, y: -1 }, { x: 2, y: 1 }\n    ];\n    const boardSize = environment.boardSize;\n    const board = environment.board;\n    const numberOfFields = boardSize * boardSize;\n    let results: number = 0;\n    const stack: { coordinate: ICoordinate, n: number }[] = startPath.map((pos, index) => ({ coordinate: pos, n: index + 1 }));\n\n    for (let index = 0; index < startPath.length - 1; ++index) {\n        const fieldIndex = startPath[index].x * boardSize + startPath[index].y;\n        board[fieldIndex] = index + 1;\n    }\n\n    while (stack.length > 0) {\n        const { coordinate, n } = stack[stack.length - 1];\n        const fieldIndex = coordinate.x * boardSize + coordinate.y;\n\n        if (board[fieldIndex] !== 0) {\n            // back tracking\n            board[fieldIndex] = 0;\n            stack.pop(); // remove current value\n            continue;\n        }\n\n        // entry\n        if (n === numberOfFields) {\n            ++results;\n            stack.pop();\n            continue;\n        }\n\n        board[fieldIndex] = n!;\n\n        for (let i = 0; i < moves.length; ++i) {\n            const move = moves[i];\n            const successor = { x: coordinate.x + move.x, y: coordinate.y + move.y };\n            // not outside of board and not yet accessed\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize &&  successor.y < boardSize && board[successor.x * boardSize + successor.y] === 0;\n\n            if (accessible) {\n                stack.push({ coordinate: successor, n: n + 1 });\n            }\n        }\n    }\n\n    return results;\n}\n\nexport function syncKnightTours(start: ICoordinate, boardSize: number): number {\n    const environment = createEnvironment(boardSize);\n    return knightTours([start], environment);\n}\n\nexport function parallelKnightTours(start: ICoordinate, boardSize: number, options?: IParallelOptions): PromiseLike<number> {\n\n    function successors(coordinate: ICoordinate) {\n        const moves = [\n            {x: -2, y: -1}, {x: -2, y: 1}, {x: -1, y: -2}, {x: -1, y: 2},\n            {x: 1, y: -2}, {x: 1, y: 2}, {x: 2, y: -1}, {x: 2, y: 1}\n        ];\n        const result: ICoordinate[] = [];\n\n        for (const move of moves) {\n            const successor = {x: coordinate.x + move.x, y: coordinate.y + move.y};\n            const accessible = successor.x >= 0 && successor.y >= 0 && successor.x < boardSize && successor.y < boardSize &&\n                (successor.x !== start.x || successor.y !== start.y) && (successor.x !== coordinate.x && successor.y !== coordinate.y);\n            if (accessible) {\n                result.push(successor);\n            }\n        }\n\n        return result;\n    }\n\n    function computeStartFields() {\n        const result: ICoordinate[][] = [];\n        for (const directSuccessor of successors(start)) {\n            for (const indirectSuccessor of successors(directSuccessor)) {\n                result.push([start, directSuccessor, indirectSuccessor]);\n            }\n        }\n        return result;\n    }\n\n    let total = 0;\n    let startTime = performance.now();\n    return parallel\n        .from(computeStartFields(), options)\n        .inEnvironment(createEnvironment, boardSize)\n        .map(knightTours)\n        .reduce(0, (memo, count) => memo + count)\n        .subscribe(subResults => {\n            for (const tours of subResults) {\n                total += tours;\n            }\n            /* tslint:disable:no-console */\n            console.log(`${total / (performance.now() - startTime) * 1000} results per second`);\n        });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./example/knights-tour.ts","import parallel from \"../src/browser/index\";\nimport {IParallelOptions} from \"../src/common/parallel/parallel-options\";\n\ninterface IComplexNumber {\n    i: number;\n    real: number;\n}\n\nexport interface IMandelbrotOptions {\n    imageHeight: number;\n    imageWidth: number;\n    iterations: number;\n    max: IComplexNumber;\n    min: IComplexNumber;\n    scalingFactor: IComplexNumber;\n}\n\nexport function createMandelOptions(imageWidth: number, imageHeight: number, iterations: number): IMandelbrotOptions {\n    // X axis shows real numbers, y axis imaginary\n    const min = { i: -1.2, real: -2.0 };\n    const max = { i: 0, real: 1.0 };\n    max.i = min.i + (max.real - min.real) * imageHeight / imageWidth;\n\n    const scalingFactor = {\n        i: (max.i - min.i) / (imageHeight - 1),\n        real: (max.real - min.real) / (imageWidth - 1)\n    };\n\n    return {\n        imageHeight,\n        imageWidth,\n        iterations,\n        max,\n        min,\n        scalingFactor\n    };\n}\n\nexport function computeMandelbrotLine(y: number, options: IMandelbrotOptions): Uint8ClampedArray {\n    function calculateZ(c: IComplexNumber): { z: IComplexNumber, n: number } {\n        const z = { i: c.i, real: c.real };\n        let n = 0;\n\n        for (; n < options.iterations; ++n) {\n            if (z.real ** 2 + z.i ** 2 > 4) {\n                break;\n            }\n\n            // z ** 2 + c\n            const zI = z.i;\n            z.i = 2 * z.real * z.i + c.i;\n            z.real = z.real ** 2 - zI ** 2 + c.real;\n        }\n\n        return { z, n };\n    }\n\n    const line = new Uint8ClampedArray(options.imageWidth * 4);\n    const cI = options.max.i - y * options.scalingFactor.i;\n\n    for (let x = 0; x < options.imageWidth; ++x) {\n        const c = {\n            i: cI,\n            real: options.min.real + x * options.scalingFactor.real\n        };\n\n        const { n } = calculateZ(c);\n        const base = x * 4;\n        /* tslint:disable:no-bitwise */\n        line[base] = n & 0xFF;\n        line[base + 1] = n & 0xFF00;\n        line[base + 2] = n & 0xFF0000;\n        line[base + 3] = 255;\n    }\n    return line;\n}\n\nexport function parallelMandelbrot(mandelbrotOptions: IMandelbrotOptions, options?: IParallelOptions) {\n    return parallel\n        .range(0, mandelbrotOptions.imageHeight, 1, options)\n        .inEnvironment(mandelbrotOptions)\n        .map(computeMandelbrotLine);\n}\n\nexport function syncMandelbrot(mandelbrotOptions: IMandelbrotOptions, callback: (line: Uint8ClampedArray, y: number) => void) {\n    for (let y = 0; y < mandelbrotOptions.imageHeight; ++y) {\n        const line = computeMandelbrotLine(y, mandelbrotOptions);\n        callback(line, y);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./example/mandelbrot.ts","import parallel from \"../src/browser/index\";\nimport {Dictionary} from \"lodash\";\n\n/* tslint:disable:no-var-requires */\n// declare function require(name: string): any;\n// const Random = require(\"simjs-random\");\n// const random = new Random(10);\n\nexport interface IProject {\n    startYear: number;\n    totalAmount: number;\n}\n\ninterface IBucket {\n    min: number;\n    max: number;\n\n    subBuckets: { [groupName: string]: { group: string; min: number, max: number } };\n}\n\ninterface IGroup {\n    /**\n     * The unique name of this group\n     */\n    name: string;\n\n    /**\n     * The description of the group\n     */\n    description: string;\n\n    /**\n     * Should a separator line been drawn for this group?\n     */\n    separator: boolean;\n\n    /**\n     * Whats the percentage of values in this group to the total number of simulated values\n     */\n    percentage: number;\n\n    /**\n     * Whats the minimum value that is still part of this group\n     */\n    from?: number;\n    /**\n     * Whats the maximum value (exclusive) that defines the upper end of this group\n     */\n    to?: number;\n}\n\nexport interface IProjectResult {\n    /**\n     * The minimal simulated value for this project\n     */\n    min: number;\n    /**\n     * The maximal simulated value\n     */\n    max: number;\n\n    /** The median of the values found for this project\n     */\n    median: number;\n\n    /**\n     * Defines where the 2/3 of the simulated values start / end.\n     */\n    twoThird: {\n        min: number;\n        max: number;\n    };\n\n    buckets: IBucket[];\n\n    groups: IGroup[];\n\n    /**\n     * The project\n     */\n    project: IProject;\n}\n\ninterface IMonteCarloEnvironment {\n    investmentAmount: number;\n    liquidity: number;\n    noInterestReferenceLine: number[];\n    numRuns: number;\n    numYears: number;\n    projectsByStartYear: Dictionary<IProject[]>;\n    simulatedValues: number[][];\n}\n\nexport interface IMonteCarloSimulationOptions {\n    numYears?: number;\n    numRuns?: number;\n    projects?: IProject[];\n    investmentAmount?: number;\n    performance?: number;\n    seed?: number;\n    volatility: number;\n    liquidity?: number;\n}\n\ninterface IInitializedMonteCarloSimulationOptions {\n    numYears: number;\n    numRuns: number;\n    projects: IProject[];\n    investmentAmount: number;\n    performance: number;\n    seed?: number;\n    taskIndex?: number;\n    valuesPerWorker?: number;\n    liquidity: number;\n    volatility: number;\n}\n\nfunction initializeOptions(options?: IMonteCarloSimulationOptions): IInitializedMonteCarloSimulationOptions {\n    return Object.assign({}, {\n        investmentAmount: 1000000,\n        liquidity: 10000,\n        numRuns: 10000,\n        numYears: 10,\n        performance: 0,\n        projects: [],\n        seed: undefined,\n        volatility: 0.01\n    }, options);\n}\n\nfunction createMonteCarloEnvironment(options: IInitializedMonteCarloSimulationOptions): IMonteCarloEnvironment {\n    /**\n     * Performs the monte carlo simulation for all years and num runs.\n     * @param cashFlows the cash flows\n     * @returns {number[][]} the simulated outcomes grouped by year\n     */\n    function simulateOutcomes(cashFlows: number[], numYears: number): number[][]  {\n        function toAbsoluteIndices(indices: number[]) {\n            let currentPortfolioValue = options.investmentAmount;\n            let previousYearIndex = 100;\n\n            for (let relativeYear = 0; relativeYear < indices.length; ++relativeYear) {\n                const currentYearIndex = indices[relativeYear];\n                const cashFlowStartOfYear = relativeYear === 0 ? 0 : cashFlows[relativeYear - 1];\n\n                // scale current value with performance gain according to index\n                const performance = currentYearIndex / previousYearIndex;\n                currentPortfolioValue = (currentPortfolioValue + cashFlowStartOfYear) * performance;\n\n                indices[relativeYear] = Math.round(currentPortfolioValue);\n                previousYearIndex = currentYearIndex;\n            }\n\n            return indices;\n        }\n\n        const result: number[][] = new Array(options.numYears);\n        for (let year = 0; year <= numYears; ++year) {\n            result[year] = new Array(options.numRuns);\n        }\n\n        for (let run = 0; run < options.numRuns; run++) {\n            const indices = [100];\n\n            for (let i = 1; i <= numYears; i++) {\n                // const randomPerformance = 1 + random.normal(options.performance, options.volatility);\n                const randomPerformance = 1 + Math.random();\n                indices.push(indices[i - 1] * randomPerformance);\n            }\n\n            // convert the relative values from above to absolute values.\n            toAbsoluteIndices(indices);\n\n            for (let year = 0; year < indices.length; ++year) {\n                result[year][run] = indices[year];\n            }\n        }\n\n        return result;\n    }\n\n    function projectsToCashFlows() {\n        const cashFlows: number[] = [];\n        for (let year = 0; year < options.numYears; ++year) {\n            const projectsByThisYear = projectsByStartYear[year] || [];\n            const cashFlow = -projectsByThisYear.reduce((memo, project) => memo + project.totalAmount, 0);\n            cashFlows.push(cashFlow);\n        }\n        return cashFlows;\n    }\n\n    function calculateNoInterestReferenceLine(cashFlows: number[]) {\n        const noInterestReferenceLine: number[] = [];\n\n        let investmentAmountLeft = options.investmentAmount;\n        for (let year = 0; year < options.numYears; ++year) {\n            investmentAmountLeft = investmentAmountLeft + cashFlows[year];\n            noInterestReferenceLine.push(investmentAmountLeft);\n        }\n        return noInterestReferenceLine;\n    }\n\n    let projectsToSimulate: IProject[] = options.projects;\n\n    if (options.taskIndex && options.valuesPerWorker) {\n        projectsToSimulate = options.projects.slice(options.taskIndex * options.valuesPerWorker, (options.taskIndex + 1) * options.valuesPerWorker);\n    }\n\n    const projects = options.projects.sort((a, b) => a.startYear - b.startYear);\n\n    // Group projects by startYear, use lodash groupBy instead\n    const projectsByStartYear: Dictionary<IProject[]> = {};\n    for (let i = 0; i < projects.length; ++i) {\n        const project = projects[i];\n        const arr = projectsByStartYear[project.startYear] = projectsByStartYear[project.startYear] || [];\n        arr.push(project);\n    }\n\n    const cashFlows = projectsToCashFlows();\n    const noInterestReferenceLine = calculateNoInterestReferenceLine(cashFlows);\n\n    const numYears = projectsToSimulate.reduce((memo, project) => Math.max(memo, project.startYear), 0);\n\n    return {\n        investmentAmount: options.investmentAmount,\n        liquidity: options.liquidity,\n        noInterestReferenceLine,\n        numRuns: options.numRuns,\n        numYears,\n        projectsByStartYear,\n        simulatedValues: simulateOutcomes(cashFlows, numYears)\n    };\n}\n\nfunction calculateProject(project: IProject, environment: IMonteCarloEnvironment): IProjectResult {\n    const NUMBER_OF_BUCKETS = 10;\n    function groupForValue(value: number, groups: IGroup[]): IGroup {\n        return groups.find(group => (typeof group.from === \"undefined\" || group.from <= value) && (typeof group.to === \"undefined\" || group.to > value))!;\n    }\n\n    function createGroups(requiredAmount: number, noInterestReference: number): IGroup[] {\n        return [\n            { description: \"Ziel erreichbar\", from: requiredAmount, name: \"green\", percentage: 0, separator: true},\n            { description: \"mit Zusatzliquidität erreichbar\", from: requiredAmount - environment.liquidity, name: \"yellow\", percentage: 0, separator: true, to: requiredAmount },\n            { description: \"nicht erreichbar\", from: noInterestReference, name: \"gray\", percentage: 0, separator: false, to: requiredAmount - environment.liquidity },\n            { description: \"nicht erreichbar, mit Verlust\", name: \"red\", percentage: 0, separator: false, to: noInterestReference }\n        ];\n    }\n\n    function calculateRequiredAmount() {\n        let amount = project.totalAmount;\n        const projectsSameYear = environment.projectsByStartYear[project.startYear];\n\n        for (let i = 0; i < projectsSameYear.length; ++i) {\n            const otherProject = projectsSameYear[i];\n            if (otherProject === project) {\n                break;\n            }\n            amount += otherProject.totalAmount;\n        }\n        return amount;\n    }\n\n    function median(values: number[]) {\n        const half = Math.floor(values.length / 2);\n\n        if (values.length % 2) {\n            return values[half];\n        }\n\n        return (values[half - 1] + values[half]) / 2.0;\n    }\n\n    const requiredAmount = calculateRequiredAmount();\n    const simulatedValuesThisYear = environment.simulatedValues[project.startYear];\n    simulatedValuesThisYear.sort((a, b) => a - b);\n\n    const groups = createGroups(requiredAmount, environment.noInterestReferenceLine[project.startYear]);\n    const valuesByGroup: { [groupName: string]: number } = {};\n    const bucketSize = Math.round(simulatedValuesThisYear.length / NUMBER_OF_BUCKETS);\n    const buckets: IBucket[] = [];\n\n    for (let i = 0; i < simulatedValuesThisYear.length; i += bucketSize) {\n        const bucket: IBucket = {\n            max: Number.MIN_VALUE,\n            min: Number.MAX_VALUE,\n            subBuckets: {}\n        };\n\n        for (let j = i; j < i + bucketSize; ++j) {\n            const value = simulatedValuesThisYear[j];\n            bucket.min = Math.min(bucket.min, value);\n            bucket.max = Math.max(bucket.max, value);\n\n            const group = groupForValue(simulatedValuesThisYear[j], groups);\n            valuesByGroup[group.name] = (valuesByGroup[group.name] || 0) + 1;\n            const subBucket = bucket.subBuckets[group.name] = bucket.subBuckets[group.name] || { group: group.name, max: Number.MIN_VALUE, min: Number.MAX_VALUE };\n            subBucket.min = Math.min(subBucket.min, value);\n            subBucket.max = Math.max(subBucket.max, value);\n        }\n\n        buckets.push(bucket);\n    }\n\n    const nonEmptyGroups = groups.filter(group => !!valuesByGroup[group.name]);\n    nonEmptyGroups.forEach(group => group.percentage = valuesByGroup[group.name] / simulatedValuesThisYear.length);\n\n    const oneSixth = Math.round(simulatedValuesThisYear.length / 6);\n    return {\n        buckets,\n        groups: nonEmptyGroups,\n        max: simulatedValuesThisYear[simulatedValuesThisYear.length - 1],\n        median: median(simulatedValuesThisYear),\n        min: simulatedValuesThisYear[0],\n        project,\n        twoThird: {\n            max: simulatedValuesThisYear[simulatedValuesThisYear.length - oneSixth],\n            min: simulatedValuesThisYear[oneSixth]\n        }\n    };\n}\n\nexport function syncMonteCarlo(options?: IMonteCarloSimulationOptions) {\n    const environment = createMonteCarloEnvironment(initializeOptions(options));\n\n    let projects: IProjectResult[] = [];\n    for (const project of options!.projects!) {\n        projects.push(calculateProject(project, environment));\n    }\n\n    return projects;\n}\n\nexport function parallelMonteCarlo(userOptions?: IMonteCarloSimulationOptions) {\n    const options = initializeOptions(userOptions);\n    return parallel\n        .from(options.projects)\n        .inEnvironment(createMonteCarloEnvironment, options)\n        .map(calculateProject);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./example/monte-carlo.ts"],"sourceRoot":""}