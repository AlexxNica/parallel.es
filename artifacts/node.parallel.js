!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["parallel-es"]=e():n["parallel-es"]=e()}(this,function(){return webpackJsonpparallel_es([4],{179:function(n,e,t){"use strict";var r=t(35);t.d(e,"IParallel",function(){return r.a}),t.d(e,"ITaskDefinition",function(){return r.b}),t.d(e,"ITask",function(){return r.c}),t.d(e,"IFunctionDefinition",function(){return r.d}),t.d(e,"IFunctionId",function(){return r.e}),t.d(e,"isFunctionId",function(){return r.f}),t.d(e,"FunctionCall",function(){return r.g}),t.d(e,"ISerializedFunctionCall",function(){return r.h}),t.d(e,"isSerializedFunctionCall",function(){return r.i}),t.d(e,"FunctionCallSerializer",function(){return r.j}),t.d(e,"IThreadPool",function(){return r.k}),t.d(e,"IParallelChain",function(){return r.l}),t.d(e,"IParallelTaskEnvironment",function(){return r.m}),t.d(e,"IParallelEnvironment",function(){return r.n}),t.d(e,"IParallelJob",function(){return r.o}),t.d(e,"IParallelOptions",function(){return r.p}),t.d(e,"IDefaultInitializedParallelOptions",function(){return r.q}),t.d(e,"IParallelJobScheduler",function(){return r.r}),t.d(e,"IParallelOperation",function(){return r.s}),t.d(e,"ISerializedParallelOperation",function(){return r.t}),t.d(e,"IParallelStream",function(){return r.u})}},[179])});
//# sourceMappingURL=node.parallel.js.map